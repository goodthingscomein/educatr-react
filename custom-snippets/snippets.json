{
	"React.FC Typed-Props Redux-Connect": {
		"prefix": "tsfcredux",
		"body": [
			"import React from 'react'",
			"",
			"// Import Connect Redux",
			"import { connect } from 'react-redux';",
			"",
			"// Import Required Redux Actions",
			"import { State } from '../../redux/root-reducer';",
			"import { Dispatch } from 'redux';",
			"import { Action } from '../../redux/all-actions.types';",
			"",
			"// Component Props Interface",
			"type Props = {",
			"  children?: JSX.Element | JSX.Element[];",
			"  // var-name: type",
			"  // var-function: () => any",
			"};",
			"",
			"// Render Component",
			"const ${1:component}: React.FC<Props> = ({ children }) => (",
			"  <div>",
			"    <h1>Hello World!</h1>",
			"  </div>",
			");",
			"",
			"const mapStateToProps = (state: State) => ({",
			"  // var-name: state.reducer.value,",
			"});",
			"",
			"const mapDispatchToProps = (dispatch: Dispatch<Action>) => ({",
			"  // var-function: (value: type) => dispatch(importedFunction(value)),",
			"});",
			"",
			"export default connect(mapStateToProps, mapDispatchToProps)(${1:component});"
		],
		"description": "Typed React.FC snippet + REDUX CONNECT"
	},
	"React.FC Typed-Props": {
		"prefix": "tsfc",
		"body": [
			"import React from 'react'",
			"",
			"// Component Props Interface",
			"type Props = {",
			"  children?: JSX.Element | JSX.Element[];",
			"  // var-name: type",
			"  // var-function: () => any",
			"};",
			"",
			"// Render Component",
			"const ${1:component}: React.FC<Props> = ({ children }) => (",
			"  <div>",
			"    <h1>Hello World!</h1>",
			"  </div>",
			");",
			"",
			"export default ${1:component};"
		],
		"description": "Typed React.FC snippet"
	}
}
